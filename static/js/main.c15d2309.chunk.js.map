{"version":3,"sources":["containers/HomePage/reducers/todos.js","containers/HomePage/actions/index.js","containers/HomePage/reducers/visibilityFilter.js","containers/Management/reducer.js","containers/Management/actionTypes.js","Store/rootReducer.js","containers/HomePage/components/Link.js","containers/HomePage/containers/FilterLink.js","containers/HomePage/components/Footer.js","containers/HomePage/containers/AddTodo.js","containers/HomePage/components/Todo.js","containers/HomePage/components/TodoList.js","containers/HomePage/containers/VisibleTodoList.js","containers/HomePage/components/HomePage.jsx","components/MainNav/MainNav.jsx","containers/Account/Account.jsx","containers/Database/ManageTable/DialogContainer.jsx","containers/Database/ManageTable/ManageTable.jsx","containers/Database/ManageTable/cellWithEditing.jsx","containers/Database/Database.jsx","containers/GeneratePaper/PaperTypeNav/PaperTypeNav.jsx","containers/GeneratePaper/PaperFilter/PaperFilter.jsx","containers/GeneratePaper/PaperEditor/PaperEditor.jsx","containers/GeneratePaper/PaperExport/PaperExport.jsx","containers/GeneratePaper/PaperStepper/PaperStepper.jsx","containers/GeneratePaper/GeneratePaper.jsx","containers/Management/TestTypeGrid.jsx","containers/Management/Management.jsx","containers/Login/Login.jsx","containers/Bot/Bot.jsx","containers/App.jsx","containers/Management/actions.js","Store/Store.js","serviceWorker.js","index.js"],"names":["todos","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","id","text","completed","map","todo","objectSpread","nextTodoId","VisibilityFilters","visibilityFilter","filter","dataReducer","payload","combineReducers","data","Link","_ref","active","children","onClick","react_default","a","createElement","main","disabled","style","marginLeft","connect","ownProps","dispatch","Footer","FilterLink","input","onSubmit","e","preventDefault","value","trim","className","ref","node","Todo","textDecoration","TodoList","toggleTodo","components_Todo","assign","key","getVisibleTodos","t","Error","HomePage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","curTime","Date","toLocaleString","lib_default","format","ticking","timezone","containers_AddTodo","VisibleTodoList","components_Footer","Component","MainNav","react_router","render","location","history","Fragment","react_sidenav_lib_default","onSelect","selected","to","pathname","push","Toggle","Nav","defaultSelected","react_sidenav_lib","eventKey","fontSize","lineHeight","primary","Account","href","target","rel","DialogContaincer","editor","textarea","handleChange","event","name","setState","defineProperty","split","console","log","save","question","questionIDlist","quesbank","item","questionID","includes","saveData","close","delete","dataItem","window","confirm","questionType","textbook","lesson","mode","labels","answer","_this2","dist_es_main","onClose","cancel","marginBottom","kendo_react_dropdowns_dist_es_main","questionTypeName","onChange","onBlur","textbookName","kendo_react_inputs_dist_es_main","modeName","React","ManageTable","edit","questionInEdit","insert","uuidv1","handleClick","i","showAll","index","selectedType","questionTypeList","choosedType","Paper_default","MenuList_default","es_main","scrollable","field","title","width","cell","remove","_GridCell","_class","apply","inherits","createClass","GridCell","DialogContainer_DialogContaincer","Database","Database_ManageTable_ManageTable","PaperTypeNav","age","multiline","currency","classes","MenuItem_default","menuItem","ListItemText_default","inset","withStyles","theme","container","display","flexWrap","textField","spacing","unit","marginRight","dense","marginTop","menu","&:focus","backgroundColor","palette","& $primary, & $icon","color","common","white","icon","PaperFilter","selectType","test","showObject","obj","result","p","hasOwnProperty","testType","testTypeName","grid","label","Bold","EditorTools","Italic","Underline","Strikethrough","Subscript","Superscript","AlignLeft","AlignCenter","AlignRight","AlignJustify","Indent","Outdent","OrderedList","UnorderedList","Undo","Redo","FontSize","FontName","FormatBlock","Unlink","InsertImage","ViewHtml","InsertTable","AddRowBefore","AddRowAfter","AddColumnBefore","AddColumnAfter","DeleteRow","DeleteColumn","DeleteTable","MergeCells","SplitCell","PaperEditor","handleExecute","view","content","EditorUtils","getHtml","generatePaper","filteredquestion","testTypeDetail","fill","multi","sentence","translate","qa","reading","shuffledFill","sort","Math","random","slice","fillBlank","shuffledMulti","multipleChoice","shuffledSentence","shuffledTranslate","shuffledQa","shuffledReading","shuffled","arr","str","toString","block","replace","kendo_react_editor_dist_es_main","tools","defaultContent","onExecute","border","padding","overflow","height","dangerouslySetInnerHTML","__html","PaperExport","pdfExportComponent","kendo_react_pdf_dist_es_main","forcePageBreak","component","background","PaperStepper","getStepContent","step","GeneratePaper_PaperFilter_PaperFilter","GeneratePaper_PaperEditor_PaperEditor","GeneratePaper_PaperExport_PaperExport","totalSteps","isStepOptional","handleSkip","activeStep","skipped","Set","values","add","handleNext","isLastStep","allStepsCompleted","findIndex","has","handleBack","handleStep","handleComplete","size","skippedSteps","paper","handleReset","completedSteps","steps","root","Stepper_default","alternativeLabel","nonLinear","buttonProps","optional","Typography_default","variant","isStepSkipped","Step_default","StepButton_default","isStepComplete","instructions","Button_default","bottom","button","backButton","GeneratePaper","GeneratePaper_PaperStepper_PaperStepper","TestTypeGrid","gridData","Management","saveEdit","currentTarget","textbookEditID","checkListsValid","alert","questionTypeNameArr","textbookNameArr","modeNameArr","textbookrowClick","textbookID","moderowClick","modeEditID","modeID","questionTyperowClick","questionTypeEditID","questionTypeID","closeEdit","textbookitemChange","d","modeitemChange","questionTypeitemChange","textbookaddRecord","newRecord","unshift","modeaddRecord","questionTypeaddRecord","questionNum","questionTypes","q","category","modes","textbooks","inEdit","editField","onRowClick","onItemChange","kendo_react_charts_dist_es_main","seriesColors","randomColor","position","categoryField","Management_TestTypeGrid","Bot","addNewMessage","botResponce","message","countReplayLength","author","bot","prevState","messages","setTimeout","checkIncludes","parent","substrs","substr","toLowerCase","randomGet","floor","pop","user","avatarUrl","suggestedActions","timestamp","kendo_react_conversational_ui_dist_es_main","onMessageSend","placeholder","App","isEmpty","login","logout","botopen","botclose","fetchData","react_router_dom","components_MainNav_MainNav","path","containers_Database_Database","containers_GeneratePaper_GeneratePaper","containers_Management_Management","containers_Bot_Bot","doSaveData","store","createStore","rootReducer","applyMiddleware","logger","Boolean","hostname","match","es","Store","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.c15d2309.chunk.js","sourcesContent":["const todos = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TODO':\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: action.id,\r\n                    text: action.text,\r\n                    completed: false\r\n                }\r\n            ]\r\n        case 'TOGGLE_TODO':\r\n            return state.map(todo =>\r\n                todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n            )\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default todos","let nextTodoId = 0\r\nexport const addTodo = text => ({\r\n    type: 'ADD_TODO',\r\n    id: nextTodoId++,\r\n    text\r\n})\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n    type: 'SET_VISIBILITY_FILTER',\r\n    filter\r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n    type: 'TOGGLE_TODO',\r\n    id\r\n})\r\n\r\nexport const VisibilityFilters = {\r\n    SHOW_ALL: 'SHOW_ALL',\r\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}","import { VisibilityFilters } from '../actions'\r\n\r\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\r\n    switch (action.type) {\r\n        case 'SET_VISIBILITY_FILTER':\r\n            return action.filter\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default visibilityFilter","import { FETCH_DATA, SAVE_DATA } from \"./actionTypes\";\n\nconst dataReducer = (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_DATA:\n            return action.payload;\n        case SAVE_DATA:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default dataReducer;","export const FETCH_DATA = \"FETCH_DATA\";\nexport const SAVE_DATA = \"SAVE_DATA\";","import { combineReducers } from 'redux'\nimport todos from '../containers/HomePage/reducers/todos'\nimport visibilityFilter from '../containers/HomePage/reducers/visibilityFilter'\nimport dataReducer from \"../containers/Management/reducer\";\n\nexport default combineReducers({\n    todos,\n    visibilityFilter,\n    data: dataReducer\n})","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from '@progress/kendo-react-buttons';\n\nconst Link = ({ active, children, onClick }) => (\n    <Button\n        onClick={onClick}\n        disabled={active}\n        style={{\n            marginLeft: '4px'\n        }}\n    >\n        {children}\n    </Button>\n)\n\nLink.propTypes = {\n    active: PropTypes.bool.isRequired,\n    children: PropTypes.node.isRequired,\n    onClick: PropTypes.func.isRequired\n}\n\nexport default Link","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)","import React from 'react'\nimport FilterLink from '../containers/FilterLink'\nimport { VisibilityFilters } from '../actions'\n\nconst Footer = () => (\n    <div>\n        <span>Show: </span>\n        <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\n        <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\n        <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\n    </div>\n)\n\nexport default Footer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo } from '../actions'\nimport { Button } from '@progress/kendo-react-buttons';\n\nconst AddTodo = ({ dispatch }) => {\n  let input\n\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          if (!input.value.trim()) {\n            return\n          }\n          dispatch(addTodo(input.value))\n          input.value = ''\n        }}\n      >\n        <input className=\"todo-input\" ref={node => (input = node)} />\n        <Button type=\"submit\">Add Todo</Button>\n      </form>\n    </div>\n  )\n}\n\nexport default connect()(AddTodo)","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Todo = ({ onClick, completed, text }) => (\n    <li\n        onClick={onClick}\n        style={{\n            textDecoration: completed ? 'line-through' : 'none'\n        }}\n    >\n        {text}\n    </li>\n)\n\nTodo.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n}\n\nexport default Todo","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Todo from './Todo'\n\nconst TodoList = ({ todos, toggleTodo }) => (\n    <ul>\n        {todos.map(todo => (\n            <Todo key={todo.id} {...todo} onClick={() => toggleTodo(todo.id)} />\n        ))}\n    </ul>\n)\n\nTodoList.propTypes = {\n    todos: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            completed: PropTypes.bool.isRequired,\n            text: PropTypes.string.isRequired\n        }).isRequired\n    ).isRequired,\n    toggleTodo: PropTypes.func.isRequired\n}\n\nexport default TodoList","import { connect } from 'react-redux'\nimport { toggleTodo } from '../actions'\nimport TodoList from '../components/TodoList'\nimport { VisibilityFilters } from '../actions'\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed)\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed)\n    default:\n      throw new Error('Unknown filter: ' + filter)\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)","import React, { Component } from \"react\";\nimport './HomePage.css';\nimport Footer from './Footer'\nimport AddTodo from '../containers/AddTodo'\nimport VisibleTodoList from '../containers/VisibleTodoList'\nimport Clock from 'react-live-clock';\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            curTime: new Date().toLocaleString()\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"home-page\">\n                <div className=\"home-page-bg\"></div>\n                <div className=\"todo\">\n                    <h1 className=\"cur-time\"><Clock format={'HH:mm:ss'} ticking={true} timezone={'Asia/Hong_Kong'} /></h1>\n                    {/* https://en.wikipedia.org/wiki/List_of_tz_database_time_zones */}\n                    <h1 className=\"morning\">Good Morning,teacher</h1>\n                    <h2>What is your main focus for today?</h2>\n                    <AddTodo />\n                    <VisibleTodoList />\n                    <Footer />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;\n\n","import React, { Component } from \"react\";\nimport '@progress/kendo-theme-material/dist/all.css';\nimport { Route } from 'react-router-dom';\nimport SideNav, { NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport { Button } from '@progress/kendo-react-buttons';\n\nclass MainNav extends Component {\n    render() {\n        return (\n            <Route render={({ location, history }) => (\n                <React.Fragment>\n                    <SideNav\n                        onSelect={(selected) => {\n                            const to = '/' + selected;\n                            if (location.pathname !== to) {\n                                history.push(to);\n                            }\n                        }}\n                    >\n                        <SideNav.Toggle />\n                        <SideNav.Nav defaultSelected=\"home\">\n\n                            <NavItem eventKey=\"home\">\n                                <NavIcon>\n                                    <i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em', lineHeight: \"2\" }} />\n                                </NavIcon>\n                                <NavText>\n                                    Home Page\n                            </NavText>\n                            </NavItem>\n                            <NavItem eventKey=\"db-manage\">\n                                <NavIcon>\n                                    <i className=\"fa fa-database\" style={{ fontSize: '1.75em', lineHeight: \"2\" }}></i>\n                                </NavIcon>\n                                <NavText>\n                                    Database Management\n                            </NavText>\n                            </NavItem>\n                            <NavItem eventKey=\"generate-paper\">\n                                <NavIcon>\n                                    <i className=\"fas fa-print\" style={{ fontSize: '1.75em', lineHeight: \"2\" }}></i>\n                                </NavIcon>\n                                <NavText>\n                                    Generate Paper\n                            </NavText>\n                            </NavItem>\n                            <NavItem eventKey=\"management\">\n                                <NavIcon>\n                                    <i className=\"fas fa-chart-pie\" style={{ fontSize: '1.75em', lineHeight: \"2\" }}></i>\n                                </NavIcon>\n                                <NavText>\n                                    Management\n                            </NavText>\n                            </NavItem>\n                            <NavItem eventKey=\"account\" className=\"account\">\n                                <NavIcon>\n                                    <i className=\"fas fa-chess-knight\" style={{ fontSize: '1.75em', lineHeight: \"2\" }}></i>\n                                </NavIcon>\n                                <NavText>\n                                    Teacher Account\n                            </NavText>\n                            </NavItem>\n                            <Button onClick={this.props.action} primary={true} className=\"log-out\">Log<br />out</Button>\n                        </SideNav.Nav>\n                    </SideNav>\n\n                </React.Fragment>\n            )}\n            />\n\n        );\n    }\n}\n\nexport default MainNav;\n\n","import React, { Component } from \"react\";\nimport './Account.css';\n\nclass Account extends Component {\n    render() {\n        return (\n            <div className=\"account-container\">\n                <div className=\"bg\"></div>\n                <div className=\"aireng\"></div>\n                <h1>This application is for teachers only.</h1>\n                <h2>I assume you can view this page because you work in Air English Institution.</h2>\n                <p>Sponsor: <a href=\"http://airenglish.cn\" target=\"_blank\" rel=\"noopener noreferrer\">Air English</a></p>\n            </div>\n        );\n    }\n}\n\nexport default Account;\n\n","\nimport React from 'react';\nimport { Dialog, DialogActionsBar } from '@progress/kendo-react-dialogs';\nimport { Input, NumericTextBox } from '@progress/kendo-react-inputs';\nimport { ComboBox, DropDownList } from '@progress/kendo-react-dropdowns';\n\n\nexport default class DialogContaincer extends React.Component {\n    editor = null;\n    textarea = null;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            questionID: this.props.dataItem.questionID,\n            questionType: this.props.dataItem.questionType || \"\",\n            textbook: this.props.dataItem.textbook || \"\",\n            lesson: this.props.dataItem.lesson || 0,\n            mode: this.props.dataItem.mode || \"\",\n            labels: this.props.dataItem.labels || [],\n            question: this.props.dataItem.question || \"\",\n            answer: this.props.dataItem.answer || \"\",\n            data: this.props.data\n        };\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    handleChange = (event) => {\n        const target = event.target;\n        var value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n        if (name === \"labels\") {\n            value = value.split(',')\n            console.log(value)\n            this.setState({\n                [name]: value\n            });\n        }\n    }\n\n    save = () => {\n        const data = this.state.data;\n        const question = this.state;\n        delete question[\"data\"];\n        const questionIDlist = data.quesbank.map(item => item.questionID);\n\n        data.quesbank = this.props.data.quesbank.map((item) => {\n            if (item.questionID === question.questionID) {\n                return question\n            }\n            return item\n        })\n\n        if (!questionIDlist.includes(question.questionID)) {\n            data.quesbank.push(question)\n        }\n\n        this.props.saveData(data)\n        this.props.close();\n\n    }\n    delete = (dataItem) => {\n        const data = this.state.data;\n        const question = this.state;\n\n        data.quesbank = this.props.data.quesbank.filter(item => item.questionID !== question.questionID);\n        if (window.confirm(\"I confirmed that I want to delete this question.\")) {\n            this.props.saveData(data)\n            this.props.close();\n        }\n    }\n\n    render() {\n        return (\n            <Dialog\n                onClose={this.props.cancel}\n            >\n                <form >\n                    <div style={{ marginBottom: '1rem' }}>\n                        <label>\n                            QuestionType<br />\n                            <ComboBox\n                                name=\"questionType\"\n                                data={this.props.questionType.map(item => item.questionTypeName)}\n                                value={this.state.questionType}\n                                onChange={(e) => {\n                                    this.handleChange(e);\n                                }}\n                                onBlur={(e) => {\n                                    this.handleChange(e);\n                                }} />\n                        </label>\n                    </div>\n                    <div style={{ marginBottom: '1rem' }}>\n                        <label>\n                            Textbook<br />\n                            <ComboBox\n                                name=\"textbook\"\n                                data={this.props.textbook.map(item => item.textbookName)}\n                                value={this.state.textbook}\n                                onChange={(e) => {\n                                    this.handleChange(e);\n                                }}\n                                onBlur={(e) => {\n                                    this.handleChange(e);\n                                }} />\n                        </label>\n                    </div><br />\n                    <div style={{ marginBottom: '1rem' }}>\n                        <label>\n                            Lesson<br />\n                            <NumericTextBox\n                                name=\"lesson\"\n                                value={this.state.lesson}\n                                onChange={(e) => {\n                                    this.handleChange(e);\n                                }}\n                                onBlur={(e) => {\n                                    this.handleChange(e);\n                                }}\n                            />\n                        </label>\n                    </div>\n                    <div style={{ marginBottom: '1rem' }}>\n                        <label>\n                            Mode<br />\n                            <DropDownList\n                                name=\"mode\"\n                                data={this.props.mode.map(item => item.modeName)}\n                                value={this.state.mode}\n                                onChange={(e) => {\n                                    this.handleChange(e);\n                                }}\n                                onBlur={(e) => {\n                                    this.handleChange(e);\n                                }} />\n                        </label>\n                    </div>\n                    <div style={{ marginBottom: '1rem' }}>\n                        <label>\n                            Labels<br />\n                            <Input\n                                type=\"text\"\n                                name=\"labels\"\n                                value={this.state.labels}\n                                onChange={(e) => {\n                                    this.handleChange(e);\n                                }}\n                                onBlur={(e) => {\n                                    this.handleChange(e);\n                                }}\n                            />\n                        </label>\n                    </div>\n                    <hr />\n                    <div style={{ marginBottom: '1rem' }} className=\"question-input\">\n                        <label>\n                            Question<br />\n                            <textarea\n                                name=\"question\"\n                                value={this.state.question}\n                                onChange={(e) => {\n                                    this.handleChange(e);\n                                }}\n                                onBlur={(e) => {\n                                    this.handleChange(e);\n                                }}\n                            />\n\n\n                        </label>\n                    </div>\n                    <div style={{ marginBottom: '1rem' }} className=\"answer-input\">\n                        <label>\n                            Answer<br />\n                            <Input\n                                type=\"text\"\n                                name=\"answer\"\n                                value={this.state.answer}\n                                onChange={(e) => {\n                                    this.handleChange(e);\n                                }}\n                                onBlur={(e) => {\n                                    this.handleChange(e);\n                                }}\n                            />\n                        </label>\n                    </div>\n\n                </form>\n                <DialogActionsBar>\n                    <button\n                        className=\"k-button\"\n                        onClick={this.props.close}\n                    >\n                        Cancel\n                            </button>\n                    <button\n                        className=\"k-button\"\n                        onClick={this.delete}\n                    >\n                        Delete\n                            </button>\n                    <button\n                        className=\"k-button k-primary\"\n                        onClick={this.save}\n                    >\n                        Save\n                            </button>\n                </DialogActionsBar>\n            </Dialog>\n        );\n    }\n}\n","\nimport React, { Component } from 'react';\nimport { Grid, GridColumn as Column, GridToolbar } from '@progress/kendo-react-grid';\nimport DialogContainer from './DialogContainer.jsx';\nimport cellWithEditing from './cellWithEditing.jsx';\nimport \"./ManageTable.css\";\nimport uuidv1 from 'uuid';\n\nimport MenuList from '@material-ui/core/MenuList';\nimport Paper from '@material-ui/core/Paper';\n\nimport { Button } from '@progress/kendo-react-buttons';\n\nclass ManageTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            quesbank: props.data.quesbank,\n            textbook: props.data.textbook,\n            mode: props.data.mode,\n            questionType: props.data.questionType,\n            questionInEdit: undefined,\n            questionTypeList: this.props.data.questionType.map(item => item.questionTypeName),\n            primary: this.props.data.questionType.map(item => false),\n            showAll: true,\n            selectedType: \"\"\n        };\n    }\n    edit = (dataItem) => {\n        this.setState({ questionInEdit: dataItem });\n    }\n\n\n\n    close = () => {\n        this.setState({ questionInEdit: undefined });\n    }\n\n    insert = () => {\n        this.setState({\n            questionInEdit: {\n                questionID: uuidv1()\n            }\n        });\n    }\n\n    dialogTitle() {\n        return `${this.state.questionInEdit.questionID === undefined ? 'Add' : 'Edit'} question`;\n    }\n\n    handleClick = (i) => {\n        if (i === -1) {\n            var primary = this.state.primary.map(item => false);\n            this.setState({\n                showAll: true,\n                primary: primary\n            })\n        }\n        else {\n            var primary = this.state.primary.map((item, index) => {\n                if (index === i) {\n                    return true;\n                }\n                return false;\n            })\n            this.setState({\n                primary: primary,\n                showAll: false,\n                selectedType: this.state.questionTypeList[i]\n            })\n        }\n    }\n    render() {\n\n        if (this.state.showAll == true) {\n            var quesbank = this.props.data.quesbank;\n        } else {\n            const choosedType = this.state.selectedType;\n            var quesbank = this.props.data.quesbank.filter(item => item.questionType === choosedType);\n        }\n        return (\n            <div >\n\n                <div className=\"sub-nav\">\n                    <Paper>\n                        <MenuList>\n                            <Button onClick={() => { this.handleClick(-1) }} primary={this.state.showAll}>ALL QUESTIONS</Button>\n                            {this.state.questionTypeList.map((item, i) => {\n                                return (\n                                    <Button onClick={() => { this.handleClick(i) }} key={i} primary={this.state.primary[i]}>{item}</Button>\n                                )\n                            })}\n                        </MenuList>\n                    </Paper>\n                </div>\n                <Grid\n                    data={quesbank}\n                    scrollable=\"none\"\n                >\n                    <GridToolbar>\n                        <button\n                            onClick={this.insert}\n                            className=\"k-button\"\n                        >\n                            Add New\n                        </button>\n                    </GridToolbar>\n                    <Column field=\"question\" title=\"Question\" width=\"600px\" />\n                    <Column field=\"answer\" title=\"Answer\" />\n                    <Column field=\"textbook\" title=\"TextBook\" />\n                    <Column field=\"lesson\" title=\"Lesson\" />\n                    <Column field=\"mode\" title=\"Mode\" />\n                    <Column field=\"labels\" title=\"Labels\" />\n                    <Column\n                        title=\"Edit\"\n                        cell={cellWithEditing(this.edit, this.remove)}\n                    />\n                </Grid>\n                {this.state.questionInEdit &&\n                    <DialogContainer\n                        dataItem={this.state.questionInEdit}\n                        close={this.close}\n                        saveData={this.props.saveData}\n                        textbook={this.state.textbook}\n                        mode={this.state.mode}\n                        questionType={this.state.questionType}\n                        data={this.props.data} />}\n            </div>\n        );\n    }\n\n\n}\n\n\nexport default ManageTable","import React from 'react';\nimport { GridCell } from '@progress/kendo-react-grid';\n\nexport default function cellWithEditing(edit, remove) {\n    return class extends GridCell {\n        render() {\n            return (\n                <td>\n                    <button\n                        className=\"k-primary k-button k-grid-edit-command\"\n                        onClick={() => { edit(this.props.dataItem); }}\n                    >\n                        Edit\n                    </button>\n                </td>\n            );\n        }\n    };\n}\n","import React, { Component } from \"react\";\nimport './Database.css';\nimport ManageTable from \"./ManageTable/ManageTable.jsx\";\n\n\nclass Database extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n    render() {\n        return (\n            <div className=\"database\">\n                <div className=\"hero\">\n                    <h1>Quesbank</h1>\n                </div>\n                <div className=\"manage-table\">\n                    <ManageTable data={this.props.data} saveData={this.props.saveData} />\n                </div>\n\n            </div>\n\n        );\n    }\n}\n\nexport default Database;\n\n","import React, { Component } from \"react\";\nimport './PaperTypeNav.css';\nimport PropTypes from 'prop-types';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItemText from '@material-ui/core/ListItemText';\n//import TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    dense: {\n        marginTop: 16,\n    },\n    menu: {\n        width: 200,\n    },\n    menuItem: {\n        '&:focus': {\n            backgroundColor: theme.palette.primary.main,\n            '& $primary, & $icon': {\n                color: theme.palette.common.white,\n            },\n        },\n    },\n    primary: {},\n    icon: {},\n});\n\nclass PaperTypeNav extends Component {\n    state = {\n        name: 'Cat in the Hat',\n        age: '',\n        multiline: 'Controlled',\n        currency: 'EUR',\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className=\"sub-nav\">\n                <Paper>\n                    <MenuList>\n                        <MenuItem className={classes.menuItem}>\n                            <ListItemText classes={{ primary: classes.primary }} inset primary=\"Midterm Exam\" />\n                        </MenuItem>\n                    </MenuList>\n                </Paper>\n            </div>\n\n        );\n    }\n}\n\n\nPaperTypeNav.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PaperTypeNav);\n\n","import React, { Component } from \"react\";\n\nimport { ComboBox, DropDownList, MultiSelect } from '@progress/kendo-react-dropdowns';\nimport grid from \"../../../Data/grid.json\";\n\nclass PaperFilter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textbook: props.data.textbook.map(item => item.textbookName),\n            mode: props.data.mode.map(item => item.modeName),\n            testType: props.data.testType.map(item => item.testTypeName),\n            questionType: props.data.questionType.map(item => item.questionTypeName),\n            test: undefined\n        };\n    }\n    selectType = (e) => {\n        var target = e.target;\n        var value = target.value;\n        this.setState({ test: value })\n    }\n    showObject = (obj) => {\n        var result = \"\";\n        for (var p in obj) {\n            if (obj.hasOwnProperty(p) && p !== \"testType\") {\n                result += p + \":\" + obj[p] + \",\";\n            }\n        }\n        return result;\n    }\n    render() {\n        var obj = grid;\n        if (this.state.test !== undefined) {\n            obj = obj.filter(item => item.testType === this.state.test);\n        }\n        return (\n            <div>\n                <h1>Step 1: Select filters that you want to apply to the exam paper</h1>\n                <div className=\"row\">\n                    <div className=\"m-3\">\n                        <DropDownList\n                            label=\"Test Type\"\n                            name=\"testType\"\n                            data={this.state.testType}\n                            onChange={(event) => { this.props.handleChange(event); this.selectType(event); }}\n                            onBlur={(event) => { this.props.handleChange(event); this.selectType(event); }} />\n                        {this.state.test === undefined ? null :\n                            <div>\n                                <a>{this.state.test} will contain - &nbsp;</a>\n                                {this.showObject(obj[0])}\n                            </div>\n                        }\n\n                    </div>\n\n                    <div className=\"m-3\">\n                        <DropDownList\n                            label=\"Mode\"\n                            name=\"mode\"\n                            data={this.state.mode}\n                            onChange={this.props.handleChange}\n                            onBlur={this.props.handleChange} />\n                    </div>\n                    <div className=\"m-3\">\n                        <MultiSelect label=\"TextBook\" data={this.state.textbook} style={{ width: '50%' }} />\n                        {/* <DropDownList\n                            label=\"Text Book\"\n                            name=\"textbook\"\n                            data={this.state.textbook}\n                            onChange={this.props.handleChange}\n                            onBlur={this.props.handleChange} /> */}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PaperFilter;\n","\nimport React, { Component } from 'react';\nimport { Editor, EditorTools, EditorUtils } from '@progress/kendo-react-editor';\nimport { log } from 'util';\nimport grid from \"../../../Data/grid.json\";\nimport \"./PaperEditor.css\";\n\nconst {\n    Bold, Italic, Underline, Strikethrough, Subscript, Superscript,\n    AlignLeft, AlignCenter, AlignRight, AlignJustify,\n    Indent, Outdent, OrderedList, UnorderedList,\n    Undo, Redo, FontSize, FontName, FormatBlock,\n    Link, Unlink, InsertImage, ViewHtml,\n    InsertTable,\n    AddRowBefore, AddRowAfter, AddColumnBefore, AddColumnAfter,\n    DeleteRow, DeleteColumn, DeleteTable,\n    MergeCells, SplitCell\n} = EditorTools;\nclass PaperEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            testType: this.props.data.generatePaper.testType,\n            mode: this.props.data.generatePaper.mode,\n            textbook: this.props.data.generatePaper.textbook\n        };\n    }\n\n    handleExecute = () => {\n        const view = this.editor.view;\n        const content = \"<div>\" + EditorUtils.getHtml(view.state) + \"<div>\";\n        this.setState({\n            content: content\n        })\n\n        this.props.handleExecute(this.state.content);\n    }\n    showObject = (obj) => {\n        var result = \"\";\n        for (var p in obj) {\n            if (obj.hasOwnProperty(p) && p !== \"testType\") {\n                result += p + \": \" + obj[p] + \", \";\n            }\n        }\n        return result;\n    }\n\n    render() {\n        //filtered question list\n        const filteredquestion = this.props.data.quesbank.filter(item =>\n            item.mode == this.state.mode &&\n            item.textbook === this.state.textbook)\n        var question = \"\";\n        if (filteredquestion.length >= 1) {\n            //selected test type question numbers\n            const testTypeDetail = grid.filter(item => item.testType === this.state.testType)[0];\n            //questions by type\n            const fill = filteredquestion.filter(item => item.questionType === \"fill in blank\");\n            const multi = filteredquestion.filter(item => item.questionType === \"multiple choice\");\n            const sentence = filteredquestion.filter(item => item.questionType === \"sentence\");\n            const translate = filteredquestion.filter(item => item.questionType === \"translate\");\n            const qa = filteredquestion.filter(item => item.questionType === \"qa\");\n            const reading = filteredquestion.filter(item => item.questionType === \"reading\");\n            //shuffled questions by type\n            const shuffledFill = fill.sort(() => 0.5 - Math.random()).slice(0, testTypeDetail.fillBlank)\n            const shuffledMulti = multi.sort(() => 0.5 - Math.random()).slice(0, testTypeDetail.multipleChoice)\n            const shuffledSentence = sentence.sort(() => 0.5 - Math.random()).slice(0, testTypeDetail.sentence)\n            const shuffledTranslate = translate.sort(() => 0.5 - Math.random()).slice(0, testTypeDetail.translate)\n            const shuffledQa = qa.sort(() => 0.5 - Math.random()).slice(0, testTypeDetail.qa)\n            const shuffledReading = reading.sort(() => 0.5 - Math.random()).slice(0, testTypeDetail.reading)\n\n            console.log(shuffledTranslate)\n\n            const shuffled = [...shuffledMulti, ...shuffledFill, ...shuffledSentence, ...shuffledTranslate, ...shuffledQa, ...shuffledReading]\n\n            const typeCount = [shuffledMulti.length, shuffledFill.length, shuffledSentence.length, shuffledTranslate.length, shuffledQa.length, shuffledReading.length]\n\n\n            var arr = shuffled.map(item =>\n                item.question)\n            var str = \"\"\n            for (var i = 0; i < arr.length; i++) {\n                var index = (i + 1).toString();\n                var block = arr[i];\n                var substr = \"( )\"\n                var substr2 = \"A.\"\n                var insert = \"<br>\"\n\n                str += \"<p>\"\n                str += index;\n                str += \". \";\n                block = block.replace(\"A.\", \"<br>A.\");\n                block = block.replace(/\\(  \\)/g, \"<br>()\");\n                str += block;\n                str += \"</p>\"\n            }\n            question = str;\n\n\n        }\n\n        var obj = grid;\n        if (this.state.testType !== undefined) {\n            obj = obj.filter(item => item.testType === this.state.testType);\n        }\n        return (\n            <div>\n\n                <h1>Step 2: Edit your paper</h1>\n                <div className=\"display-filter\">\n                    <h2>You Selected:</h2>\n                    <p>Test Type : {this.state.testType}</p>\n                    <p>Mode : {this.state.mode}</p>\n                    <p>Textbook : {this.state.textbook}</p>\n                    {this.state.testType === undefined ? null :\n                        <div>\n                            <a>{this.state.testType} will contain - &nbsp;</a>\n                            {this.showObject(obj[0])}\n                        </div>\n                    }\n                </div>\n                <h2>This is the paper we generated. You can edit it until you are ready to print it out. See right for preview</h2>\n                <div className=\"edit-preview\">\n                    <Editor\n                        tools={[\n                            [Bold, Italic, Underline, Strikethrough],\n                            [Subscript, Superscript],\n                            [AlignLeft, AlignCenter, AlignRight, AlignJustify],\n                            [Indent, Outdent],\n                            [OrderedList, UnorderedList],\n                            FontSize, FontName, FormatBlock,\n                            [Undo, Redo],\n                            [Link, Unlink, InsertImage, ViewHtml],\n                            [InsertTable],\n                            [AddRowBefore, AddRowAfter, AddColumnBefore, AddColumnAfter],\n                            [DeleteRow, DeleteColumn, DeleteTable],\n                            [MergeCells, SplitCell]\n                        ]}\n                        ref={editor => this.editor = editor}\n                        defaultContent={question}\n                        onExecute={this.handleExecute}\n                    />\n\n                    <div style={{ border: \"1px solid #00000038\", padding: \"50px\", overflow: \"hidden\", width: \"50%\", height: \"100%\" }}>\n                        <div dangerouslySetInnerHTML={{ __html: this.state.content }} />\n                    </div>\n\n                </div>\n\n            </div>\n\n        );\n    }\n}\n\nexport default PaperEditor;\n","\nimport React, { Component } from 'react';\nimport { PDFExport } from '@progress/kendo-react-pdf';\nimport \"./PaperExport.css\"\n\nclass PaperExport extends Component {\n    pdfExportComponent;\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: this.props.data.generatePaper.content\n        };\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Step 3: Print your pdf</h1>\n                <div className=\"example-config\">\n                    <button className=\"k-button\" onClick={() => { this.pdfExportComponent.save(); }}>\n                        Export PDF\n                    </button>\n                </div>\n\n                <PDFExport\n                    forcePageBreak=\".page-break\"\n                    ref={(component) => this.pdfExportComponent = component}\n                >\n                    {/* For details see:\n                    http://www.telerik.com/kendo-react-ui/components/drawing/drawing-dom/#toc-dimensions-and-css-units */}\n                    <div style={{ border: \"1px solid #00000038\", padding: \"50px\", overflow: \"hidden\", width: \"500px\",background:\"beige\" }}>\n                        <div dangerouslySetInnerHTML={{ __html: this.state.content }} />\n                    </div>\n                </PDFExport>\n            </div>\n        );\n    }\n}\nexport default PaperExport;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport PaperFilter from \"../PaperFilter/PaperFilter.jsx\";\nimport PaperEditor from \"../PaperEditor/PaperEditor.jsx\";\nimport PaperExport from \"../PaperExport/PaperExport.jsx\";\nimport { Editor, EditorTools, EditorUtils } from '@progress/kendo-react-editor';\n\nconst styles = theme => ({\n    root: {\n        width: '90%',\n    },\n    button: {\n        marginRight: theme.spacing.unit,\n    },\n    backButton: {\n        marginRight: theme.spacing.unit,\n    },\n    completed: {\n        display: 'inline-block',\n    },\n    instructions: {\n        marginTop: theme.spacing.unit,\n        marginBottom: theme.spacing.unit,\n    },\n});\n\nfunction getSteps() {\n    return ['Select Filter', 'Edit Paper', 'Export PDF'];\n}\n\n\nclass PaperStepper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeStep: 0,\n            completed: new Set(),\n            skipped: new Set(),\n            testType: \"\",\n            mode: \"\",\n            textbook: \"\",\n            content: \"\"\n        };\n    }\n\n    getStepContent = (step) => {\n        switch (step) {\n            case 0:\n                return <PaperFilter data={this.props.data} handleChange={this.handleChange} />;\n            case 1:\n                return <PaperEditor data={this.props.data} handleExecute={this.handleExecute} />;\n            case 2:\n                return <PaperExport data={this.props.data} value=\"test\" />;\n            default:\n                return 'Unknown step';\n        }\n    }\n\n    handleChange = (event) => {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n    handleExecute = (content) => {\n        console.log(content)\n        this.setState({\n            content: content\n        })\n\n    }\n    totalSteps = () => getSteps().length;\n\n    isStepOptional = step => step === null;\n\n    handleSkip = () => {\n        const { activeStep } = this.state;\n        if (!this.isStepOptional(activeStep)) {\n            // You probably want to guard against something like this\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        this.setState(state => {\n            const skipped = new Set(state.skipped.values());\n            skipped.add(activeStep);\n            return {\n                activeStep: state.activeStep + 1,\n                skipped,\n            };\n        });\n    };\n\n    handleNext = () => {\n        let activeStep;\n\n        if (this.isLastStep() && !this.allStepsCompleted()) {\n            // It's the last step, but not all steps have been completed\n            // find the first step that has been completed\n            const steps = getSteps();\n            activeStep = steps.findIndex((step, i) => !this.state.completed.has(i));\n        } else {\n            activeStep = this.state.activeStep + 1;\n        }\n        this.setState({\n            activeStep,\n        });\n    };\n\n    handleBack = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep - 1,\n        }));\n    };\n\n    handleStep = step => () => {\n        this.setState({\n            activeStep: step,\n        });\n    };\n\n    handleComplete = () => {\n        // eslint-disable-next-line react/no-access-state-in-setstate\n        const completed = new Set(this.state.completed);\n        completed.add(this.state.activeStep);\n        this.setState({\n            completed,\n        });\n\n        /**\n         * Sigh... it would be much nicer to replace the following if conditional with\n         * `if (!this.allStepsComplete())` however state is not set when we do this,\n         * thus we have to resort to not being very DRY.\n         */\n        if (completed.size !== this.totalSteps() - this.skippedSteps()) {\n            this.handleNext();\n        }\n\n        const data = this.props.data;\n        const paper = {\n            testType: this.state.testType,\n            textbook: this.state.textbook,\n            mode: this.state.mode,\n            content: this.state.content\n        }\n\n\n        data.generatePaper = paper;\n\n        this.props.saveData(data)\n    };\n\n    handleReset = () => {\n        this.setState({\n            activeStep: 0,\n            completed: new Set(),\n            skipped: new Set(),\n        });\n    };\n\n    skippedSteps() {\n        return this.state.skipped.size;\n    }\n\n    isStepSkipped(step) {\n        return this.state.skipped.has(step);\n    }\n\n    isStepComplete(step) {\n        return this.state.completed.has(step);\n    }\n\n    completedSteps() {\n        return this.state.completed.size;\n    }\n\n    allStepsCompleted() {\n        return this.completedSteps() === this.totalSteps() - this.skippedSteps();\n    }\n\n    isLastStep() {\n        return this.state.activeStep === this.totalSteps() - 1;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const steps = getSteps();\n        const { activeStep } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <Stepper alternativeLabel nonLinear activeStep={activeStep}>\n                    {steps.map((label, index) => {\n                        const props = {};\n                        const buttonProps = {};\n                        if (this.isStepOptional(index)) {\n                            buttonProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n                        }\n                        if (this.isStepSkipped(index)) {\n                            props.completed = false;\n                        }\n                        return (\n                            <Step key={label} {...props}>\n                                <StepButton\n                                    // onClick={this.handleStep(index)}\n                                    completed={this.isStepComplete(index)}\n                                    {...buttonProps}\n                                >\n                                    {label}\n                                </StepButton>\n                            </Step>\n                        );\n                    })}\n                </Stepper>\n                <div >\n                    {this.allStepsCompleted() ? (\n                        <div>\n                            <Typography className={classes.instructions}>\n                                Click here to reset -\n              </Typography>\n                            <Button onClick={this.handleReset}>Reset</Button>\n                        </div>\n                    ) : (\n                            <div>\n                                <Typography component={'div'} className={classes.instructions}>{this.getStepContent(activeStep)}</Typography>\n                                <div style={{ bottom: \"33px\" }}>\n                                    {/* <Button\n                                        disabled={activeStep === 0}\n                                        onClick={this.handleBack}\n                                        className={classes.button}\n                                    >\n                                        Back\n                </Button> */}\n                                    {this.isStepOptional(activeStep) &&\n                                        !this.state.completed.has(this.state.activeStep) && (\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={this.handleSkip}\n                                                className={classes.button}\n                                            >\n                                                Skip\n                    </Button>\n                                        )}\n                                    {activeStep !== steps.length &&\n                                        (this.state.completed.has(this.state.activeStep) ? (\n                                            <Typography variant=\"caption\" className={classes.completed}>\n                                                Step {activeStep + 1} already completed\n                    </Typography>\n                                        ) : (\n                                                <Button variant=\"contained\" color=\"primary\" onClick={this.handleComplete}>\n                                                    {this.completedSteps() === this.totalSteps() - 1 ? 'RESET' : 'Complete Step'}\n                                                </Button>\n                                            ))}\n                                </div>\n                            </div>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nPaperStepper.propTypes = {\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(PaperStepper);\n","import React, { Component } from \"react\";\nimport './GeneratePaper.css';\nimport PaperTypeNav from \"./PaperTypeNav/PaperTypeNav.jsx\";\nimport PaperStepper from \"./PaperStepper/PaperStepper.jsx\";\n\n\nclass GeneratePaper extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n    render() {\n        return (\n            <div className=\"generate-paper\">\n                <div className=\"hero\">\n                    <h1>Generate Paper</h1>\n                </div>\n                <div className=\"filter-req\">\n                    <PaperStepper data={this.props.data} saveData={this.props.saveData} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GeneratePaper;\n\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\n\nimport grid from '../../Data/grid.json';\n\nclass TestTypeGrid extends React.Component {\n    state = {\n        gridData: grid\n    }\n\n    render() {\n        return (\n            <div className=\"test-type-grid\">\n                <h2>Test Types</h2>\n                <Grid\n                    style={{ height: '400px' }}\n                    data={this.state.gridData}\n                    scrollable=\"none\"\n                >\n                    <Column field=\"testType\" title=\"Test Type\" />\n                    <Column field=\"multipleChoice\" title=\"Multiple Choice\" />\n                    <Column field=\"fillBlank\" title=\"Fill in Blank\" />\n                    <Column field=\"sentence\" title=\"Sentence\" />\n                    <Column field=\"translate\" title=\"Translate\" />\n                    <Column field=\"qa\" title=\"QA\" />\n                    <Column field=\"reading\" title=\"Reading\" />\n\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default TestTypeGrid;","import React, { Component } from \"react\";\nimport './Management.css';\nimport {\n    Chart,\n    ChartLegend,\n    ChartSeries,\n    ChartSeriesItem\n} from '@progress/kendo-react-charts';\nimport { Grid, GridColumn as Column, GridToolbar } from '@progress/kendo-react-grid';\nimport randomColor from \"randomcolor\";\nimport TestTypeGrid from \"./TestTypeGrid\";\nimport { AssertionError } from \"assert\";\n\n\nclass Management extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            quesbank: props.data.quesbank,\n            textbook: props.data.textbook,\n            mode: props.data.mode,\n            questionType: props.data.questionType,\n            textbookEditID: null,\n            modeEditID: null,\n            questionTypeEditID: null,\n            generatePaper: props.data.generatePaper,\n            testType: props.data.testType\n        };\n    }\n\n    saveEdit = (e) => {\n        if (e.target === e.currentTarget) {\n            this.setState({ textbookEditID: null });\n        }\n\n        console.log(this.state)\n        const data = this.state;\n        delete data[\"textbookEditID\"];\n        delete data[\"modeEditID\"];\n        delete data[\"questionTypeEditID\"];\n\n\n        if (this.checkListsValid()) this.props.saveData(data);\n        else alert(\"has duplicates or empty string\")\n\n\n    };\n\n    checkListsValid = () => {\n        var questionTypeNameArr = this.state.questionType.map(item => item.questionTypeName);\n        var questionTypeNameDuplicates = ((new Set(questionTypeNameArr)).size !== questionTypeNameArr.length);\n        if (!questionTypeNameDuplicates) return false\n        for (var i = 0; i < questionTypeNameArr.length; i++) {\n            if (questionTypeNameArr[i] == \"\") return false\n        }\n\n        var textbookNameArr = this.state.textbook.map(item => item.textbookName);\n        var textbookNameDuplicates = ((new Set(textbookNameArr)).size !== textbookNameArr.length);\n        if (!textbookNameDuplicates) return false\n        for (var i = 0; i < textbookNameArr.length; i++) {\n            if (textbookNameArr[i] == \"\") return false\n        }\n\n        var modeNameArr = this.state.mode.map(item => item.modeName);\n        var modeNameDuplicates = ((new Set(modeNameArr)).size !== modeNameArr.length);\n        if (!modeNameDuplicates) return false\n        for (var i = 0; i < modeNameArr.length; i++) {\n            if (modeNameArr[i] == \"\") return false\n        }\n\n        return true\n    }\n\n    textbookrowClick = (e) => {\n        this.setState({\n            textbookEditID: e.dataItem.textbookID\n        });\n    };\n    moderowClick = (e) => {\n        this.setState({\n            modeEditID: e.dataItem.modeID\n        });\n    };\n    questionTyperowClick = (e) => {\n        this.setState({\n            questionTypeEditID: e.dataItem.questionTypeID\n        });\n    };\n\n    closeEdit = (e) => {\n        if (e.target === e.currentTarget) {\n            this.setState({\n                textbookEditID: null,\n                modeEditID: null,\n                questionTypeEditID: null\n            });\n        }\n    };\n\n    textbookitemChange = (e) => {\n        const data = this.state.textbook;\n        const index = data.findIndex(d => d.textbookID === e.dataItem.textbookID);\n        data[index] = { ...data[index], [e.field]: e.value };\n        this.setState({\n            textbook: data\n        });\n    };\n    modeitemChange = (e) => {\n        const data = this.state.mode;\n        const index = data.findIndex(d => d.modeID === e.dataItem.modeID);\n        data[index] = { ...data[index], [e.field]: e.value };\n        this.setState({\n            mode: data\n        });\n    };\n    questionTypeitemChange = (e) => {\n        const data = this.state.questionType;\n        const index = data.findIndex(d => d.questionTypeID === e.dataItem.questionTypeID);\n        data[index] = { ...data[index], [e.field]: e.value };\n        this.setState({\n            questionType: data\n        });\n    };\n\n    textbookaddRecord = () => {\n        const newRecord = { textbookID: this.state.textbook.length + 1, textbookName: \"edit textbook\" };\n        const data = this.state.textbook;\n        data.unshift(newRecord);\n        this.setState({\n            textbook: data,\n            textbookEditID: newRecord.textbookID\n        });\n    };\n    modeaddRecord = () => {\n        const newRecord = { modeID: this.state.mode.length + 1, modeName: \"edit mode\" };\n        const data = this.state.mode;\n        data.unshift(newRecord);\n        this.setState({\n            mode: data,\n            modeEditID: newRecord.modeID\n        });\n    };\n    questionTypeaddRecord = () => {\n        const newRecord = { questionTypeID: this.state.questionType.length + 1, questionTypeName: \"edit type\" };\n        const data = this.state.questionType;\n        data.unshift(newRecord);\n        this.setState({\n            questionType: data,\n            questionTypeEditID: newRecord.questionTypeID\n        });\n    };\n\n    render() {\n        const questionNum = this.props.data.quesbank.length;\n        const questionTypes = this.props.data.questionType.map(item => {\n            var list = this.props.data.quesbank.filter(q => q.questionType === item.questionTypeName);\n            var len = list.length;\n            var value = len / questionNum;\n            var type = item.questionTypeName;\n            return (\n                {\n                    category: type,\n                    value: value\n                }\n            )\n        })\n        const modes = this.props.data.mode.map(item => {\n            var list = this.props.data.quesbank.filter(q => q.mode === item.modeName);\n            var len = list.length;\n            var value = len / questionNum;\n            var type = item.modeName;\n            return (\n                {\n                    category: type,\n                    value: value\n                }\n            )\n        })\n\n        const textbooks = this.props.data.textbook.map(item => {\n            var list = this.props.data.quesbank.filter(q => q.textbook === item.textbookName);\n            var len = list.length;\n            var value = len / questionNum;\n            var type = item.textbookName;\n            return (\n                {\n                    category: type,\n                    value: value\n                }\n            )\n        })\n\n        return (\n            <div className=\"management-container\" onClick={this.closeEdit}>\n                <div className=\"hero\">\n                    <h1>Management</h1>\n                </div>\n                <div className=\"ops\">\n                    <button title=\"Save\" className=\"k-button\" onClick={this.saveEdit} >Save Tags</button>\n                </div>\n                <div>\n                    <div className=\"tag-management\">\n\n                        <Grid\n                            data={this.state.textbook.map((item) =>\n                                Object.assign({\n                                    inEdit: item.textbookID === this.state.textbookEditID\n                                }, item)\n                            )}\n                            editField=\"inEdit\"\n\n                            onRowClick={this.textbookrowClick}\n                            onItemChange={this.textbookitemChange}\n                            className=\"textbook-tag\"\n                            scrollable=\"none\"\n                        >\n                            <GridToolbar>\n                                <div onClick={this.closeEdit}>\n                                    <button title=\"Add new\" className=\"k-button k-primary\" onClick={this.textbookaddRecord} >\n                                        Add new</button>\n                                </div>\n                            </GridToolbar >\n                            <Column field=\"textbookName\" title=\"Manage Textbook Tag\" />\n                        </Grid >\n                    </div>\n\n                    <div className=\"tag-management\">\n                        <Grid\n                            data={this.state.mode.map((item) =>\n                                Object.assign({\n                                    inEdit: item.modeID === this.state.modeEditID\n                                }, item)\n                            )}\n                            editField=\"inEdit\"\n\n                            onRowClick={this.moderowClick}\n                            onItemChange={this.modeitemChange}\n                            className=\"textbook-tag\"\n                            scrollable=\"none\"\n                        >\n                            <GridToolbar>\n                                <div onClick={this.closeEdit}>\n                                    <button title=\"Add new\" className=\"k-button k-primary\" onClick={this.modeaddRecord} >\n                                        Add new</button>\n                                </div>\n                            </GridToolbar >\n                            <Column field=\"modeName\" title=\"Manage Mode Tag\" />\n                        </Grid >\n                    </div>\n\n                    <div className=\"tag-management\">\n                        <Grid\n                            data={this.state.questionType.map((item) =>\n                                Object.assign({\n                                    inEdit: item.questionTypeID === this.state.questionTypeEditID\n                                }, item)\n                            )}\n                            editField=\"inEdit\"\n\n                            onRowClick={this.questionTyperowClick}\n                            onItemChange={this.questionTypeitemChange}\n                            className=\"textbook-tag\"\n                            scrollable=\"none\"\n                        >\n                            <GridToolbar>\n                                <div onClick={this.closeEdit}>\n                                    <button title=\"Add new\" className=\"k-button k-primary\" onClick={this.questionTypeaddRecord} >\n                                        Add new</button>\n                                </div>\n                            </GridToolbar >\n                            <Column field=\"questionTypeName\" title=\"Manage questionType Tag\" />\n                        </Grid >\n                    </div>\n                </div>\n                <div>\n                    <div className=\"stats\">\n                        <h2>Textbook Statistics</h2>\n                        <Chart seriesColors={this.props.data.textbook.map(item => randomColor())}>\n                            <ChartLegend position=\"top\" />\n                            <ChartSeries>\n                                <ChartSeriesItem type=\"pie\" data={textbooks} field=\"value\" categoryField=\"category\" />\n                            </ChartSeries>\n                        </Chart>\n                    </div>\n\n                    <div className=\"stats\">\n                        <h2>Mode Statistics</h2>\n                        <Chart seriesColors={this.props.data.mode.map(item => randomColor())}>\n                            <ChartLegend position=\"top\" />\n                            <ChartSeries>\n                                <ChartSeriesItem type=\"pie\" data={modes} field=\"value\" categoryField=\"category\" />\n                            </ChartSeries>\n                        </Chart>\n                    </div>\n                    <div className=\"stats\">\n                        <h2>Question Type Statistics</h2>\n                        <Chart seriesColors={this.props.data.questionType.map(item => randomColor())}>\n                            <ChartLegend position=\"top\" />\n                            <ChartSeries>\n                                <ChartSeriesItem type=\"pie\" data={questionTypes} field=\"value\" categoryField=\"category\" />\n                            </ChartSeries>\n                        </Chart>\n                    </div>\n                </div>\n                <TestTypeGrid></TestTypeGrid>\n\n            </div>\n        );\n    }\n}\n\nexport default Management;\n\n","\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { Input } from '@progress/kendo-react-inputs';\nimport { DropDownList } from '@progress/kendo-react-dropdowns';\nimport { Button } from '@progress/kendo-react-buttons';\nimport \"./Login.css\";\n\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            success: false\n        };\n    }\n    // handleSubmit = (event) => {\n    //     event.preventDefault();\n    //     this.props.action;\n    //     setTimeout(() => {\n    //         this.setState({ success: false });\n    //     }, 3000);\n    // }\n    render() {\n        return (\n            <div className=\"row example-wrapper\">\n                <div className=\"col-xs-12 col-sm-6 offset-sm-3 example-col\">\n                    <div className=\"card\">\n                        <div className=\"card-block\">\n                            <form className=\"k-form\" onSubmit={this.props.action}>\n                                <fieldset>\n                                    <legend>Please Login</legend>\n                                    <label className=\"k-form-field\">\n                                        <span>User Name</span>\n                                        <Input\n                                            name=\"username\"\n                                            required={true}\n                                        />\n                                    </label>\n                                    <label className=\"k-form-field\">\n                                        <span>Password</span>\n                                        <Input\n                                            name=\"password\"\n                                            type=\"password\"\n                                            required={true}\n                                        />\n                                    </label>\n                                </fieldset>\n                                <Button className=\"mt-3\" type=\"submit\" primary={true}>Login</Button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                {!this.state.success ? null :\n                    <div\n                        className=\"alert alert-success\"\n                        style={{ position: 'absolute' }}\n                    >\n                        Wrong matching of password and username.\n                    </div>}\n            </div>\n        );\n    }\n\n\n}\n\nexport default Login;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Chat } from '@progress/kendo-react-conversational-ui';\nimport \"./Bot.css\";\nimport botReply from \"./bot.json\";\nclass Bot extends React.Component {\n    constructor(props) {\n        super(props);\n        this.user = {\n            id: 1,\n            avatarUrl: \"https://via.placeholder.com/24/008000/008000.png\"\n        };\n        this.bot = { id: 0 };\n        this.state = {\n            messages: [\n                {\n                    author: this.bot,\n                    suggestedActions: [\n                        {\n                            type: 'reply',\n                            value: 'Who are you?'\n                        }, {\n                            type: 'reply',\n                            value: 'Hello!'\n                        }, {\n                            type: 'reply',\n                            value: 'Can you speak Chinese?'\n                        },\n                        {\n                            type: 'reply',\n                            value: 'What does this application do?'\n                        },\n\n                        {\n                            type: 'reply',\n                            value: 'Where can I generate a test paper?'\n                        },\n                        {\n                            type: 'reply',\n                            value: 'Where can I manage tags?'\n                        },\n                        {\n                            type: 'reply',\n                            value: 'Where can I manage all the questions?'\n                        }\n                    ],\n                    timestamp: new Date(),\n                    text: \"Hello, I am Quesbot! There are some suggested questions:\"\n                }\n            ]\n        };\n    }\n\n    addNewMessage = (event) => {\n        let botResponce = Object.assign({}, event.message);\n        botResponce.text = this.countReplayLength(event.message.text);\n        botResponce.author = this.bot;\n        this.setState((prevState) => ({\n            messages: [\n                ...prevState.messages,\n                event.message\n            ]\n        }));\n        setTimeout(() => {\n            this.setState(prevState => ({\n                messages: [\n                    ...prevState.messages,\n                    botResponce\n                ]\n            }));\n        }, 1000);\n    };\n\n    checkIncludes = (parent, substrs) => {\n        for (var i = 0; i < substrs.length; i++) {\n            var substr = substrs[i].toLowerCase();\n            if (parent.toLowerCase().includes(substr)) {\n                return true\n            }\n        }\n        return false\n    }\n\n    randomGet = (arr) => {\n        return arr[Math.floor(Math.random() * arr.length)]\n    }\n\n    countReplayLength = (question) => {\n        var answer = this.randomGet([\"Sorry, I don't understand.\", \"Try asking something simple\",\n            \"I am so sorry.\", \"My mom is Hailey, contact her.\", \"I know I am too young to understand you.\",\n            \"It’s All My Fault I couldn't understand you.\", \"Forgive me I dont understand you\", \"😃 Grinning Face With Big Eyes\", \"😄 Grinning Face With Smiling Eyes\", \"😁 Beaming Face With Smiling Eyes\", \"😆 Grinning Squinting Face\", \"😅 Grinning Face With Swe\", \"🤣 Rolling on the Floor Laughi\", \"😂 Face With Tears of J\", \"🙂 Slightly Smiling Fa\", \"🙃 Upside - Down Fa\", \"😉 Winking Fa\", \"😊 Smiling Face With Smiling Ey\", \"😇 Smiling Face With Ha\", \"😍 Smiling Face With Heart - Ey\", \"🤩 Star - Stru\", \"😘 Face Blowing a Ki\", \"😗 Kissing Fa\", \"😚 Kissing Face With Closed Ey\", \"😙 Kissing Face With Smiling Ey\", \"😋 Face Savoring Fo\", \"😛 Face With Tong\", \"😜 Winking Face With Tong\", \"🤪 Zany Fa\", \"😝 Squinting Face With Tong\", \"🤑 Money - Mouth Fa\", \"🤗 Hugging Fa\", \"🤭 Face With Hand Over Mou\", \"🤫 Shushing Fa\", \"🤔 Thinking Fa\", \"🤐 Zipper - Mouth Fa\", \"🤨 Face With Raised Eyebr\", \"😐 Neutral Fa\", \"😑 Expressionless Fa\", \"😶 Face Without Mou\", \"😏 Smirking Fa\", \"😒 Unamused Fa\", \"🙄 Face With Rolling Ey\", \"😬 Grimacing Fa\", \"🤥 Lying Fa\", \"😌 Relieved Fa\", \"😔 Pensive Fa\", \"😪 Sleepy Fa\", \"🤤 Drooling Fa\", \"😴 Sleeping Fa\", \"😷 Face With Medical Ma\", \"🤒 Face With Thermomet\", \"🤕 Face With Head - Banda\", \"🤢 Nauseated Fa\", \"🤮 Face Vomiti\", \"🤧 Sneezing Fa\", \"😵 Dizzy Face\"]);\n        const REGEX_CHINESE = /[\\u4e00-\\u9fff]|[\\u3400-\\u4dbf]|[\\u{20000}-\\u{2a6df}]|[\\u{2a700}-\\u{2b73f}]|[\\u{2b740}-\\u{2b81f}]|[\\u{2b820}-\\u{2ceaf}]|[\\uf900-\\ufaff]|[\\u3300-\\u33ff]|[\\ufe30-\\ufe4f]|[\\uf900-\\ufaff]|[\\u{2f800}-\\u{2fa1f}]/u;\n\n        if (this.checkIncludes(question, [\"hi\", \"hello\"])) answer = this.randomGet([\"Nice meeting you\", \"How are you?\", \"How’s it going?\", \"How do you do?\", \"What’s up?\"]);\n        if (this.checkIncludes(question, [\"your name\"])) answer = \"My name is Quesbot.\";\n        if (this.checkIncludes(question, [\"questions\", \"i don't know\", \"i do not know\"])) answer = \"You can ask me questions related to this app\";\n        if (this.checkIncludes(question, [\"help\", \"help me\", \"trouble\", \"problem\", \"babe\", \"baby\", \"dear\"])) answer = \"Do you need assistance? I'm here for you\";\n        if (this.checkIncludes(question, [\"work\", \"job\"])) answer = [\"I am working for Quesbank\", \"Are you tired of working\"][Math.floor(Math.random() * 2)];\n        if (this.checkIncludes(question, [\"do you\"])) answer = [\"Yes I do.\", \"No I don't.\", \"Take a guess.\", \"Maybe I do.\", \"I feel like I do.\"][Math.floor(Math.random() * 5)];\n        if (this.checkIncludes(question, [\"did you\"])) answer = [\"Yes I did.\", \"No I didn't.\", \"Take a guess.\", \"Maybe I did.\", \"I feel like I did.\"][Math.floor(Math.random() * 5)];\n        if (this.checkIncludes(question, [\"can you\"])) answer = [\"Yes I can.\", \"No I can't.\", \"Take a guess.\", \"Maybe I can.\", \"I feel like I can.\"][Math.floor(Math.random() * 5)];\n        if (this.checkIncludes(question, [\"why\", \"why do you\", \"why are you\"])) answer = [\"I don't really know\", \"You may need to contact my mom\", \"I suggest you not asking me this kinda hard question. I am only 1 year old\"][Math.floor(Math.random() * 3)];\n        if (this.checkIncludes(question, [\"where\", \"where do you\", \"where did you\"])) answer = [\"I don't really know\", \"You may need to contact my mom\", \"I suggest you not asking me this kinda hard question. I am only 1 year old\"][Math.floor(Math.random() * 3)];\n        if (this.checkIncludes(question, [\"who\", \"who are\"])) answer = [\"I don't really know\", \"You may need to contact my mom\", \"I suggest you not asking me this kinda hard question. I am only 1 year old\"][Math.floor(Math.random() * 3)];\n        if (this.checkIncludes(question, [\"how\", \"how do you\"])) answer = [\"I don't really know\", \"You may need to contact my mom\", \"I suggest you not asking me this kinda hard question. I am only 1 year old\"][Math.floor(Math.random() * 3)];\n        if (this.checkIncludes(question, [\"your age\", \"how are you\"])) answer = \"I was born in 2019, guess how old I am.\";\n        if (this.checkIncludes(question, [\"happy\", \"nice\"])) answer = this.randomGet([\"Glad to hear!\", \"I'm happy for you.\"]);\n        if (this.checkIncludes(question, [\"sad\", \"cry\", \"bad\"])) answer = [\"Sorry to hear!\", \"Sorry My fault.\"][Math.floor(Math.random() * 2)];\n        if (this.checkIncludes(question, [\"woman\", \"man\", \"boy\", \"girl\"])) answer = [\"I am your robot friend\", \"I am a robot\"][Math.floor(Math.random() * 2)];\n        if (this.checkIncludes(question, [\"good\", \"ok\", \"k\", \"great\", \"kk\", \"okay\", \"fine\"])) answer = [\"good\", \":)\", \"ok\", \"perfect\", \"kk\"][Math.floor(Math.random() * 5)];\n        if (this.checkIncludes(question, [\"no\"])) answer = this.randomGet([\"why\", \"what's wrong\"]);\n        if (this.checkIncludes(question, [\"your mother\", \"your mom\", \"your parent\", \"your dad\"])) answer = [\"My mom is Hailey\", \"My mom Hailey is pretty\"][Math.floor(Math.random() * 2)];\n        if (this.checkIncludes(question, [\"can you\"])) answer = [\"Yes I can.\", \"No I can't.\", \"Take a guess.\", \"Maybe I can.\", \"I feel like I can.\"][Math.floor(Math.random() * 5)];\n        if (this.checkIncludes(question, [\"kiki\"])) answer = \"I know Kiki, she is pretty\";\n        if (this.checkIncludes(question, [\"chinese\"])) answer = \"你说啥\";\n        if (this.checkIncludes(question, [\"generate\"])) answer = \"Clicking the printer icon at your left hand side nav bar will take you to the page.\";\n        if (this.checkIncludes(question, [\"database\"])) answer = \"Clicking the database icon (under home) at your left hand side nav bar will take you to the page.\";\n        if (this.checkIncludes(question, [\"tags\"])) answer = \"Clicking the pie chart icon at your left hand side nav bar will take you to the page.\";\n        if (this.checkIncludes(question, [\"who are you\"])) answer = \"I am the robot who can answer your questions about this app!\";\n        if (this.checkIncludes(question, [\"how are you\"])) answer = [\"😀 Grinning Face\", \"I am good! You?\", \"I am doing fine, you?\", \"I am good\", \"I am sad\"][Math.floor(Math.random() * 4)];\n        if (this.checkIncludes(question, [\"hailey\"])) answer = [\"I love Hailey\", \"Hailey is my mom.\", \"Hailey is pretty\", \"Hailey GOGO!\"][Math.floor(Math.random() * 4)];\n        if (this.checkIncludes(question, [\"bbox\"])) answer = \"pilipalapeng\";\n        if (this.checkIncludes(question, [\"thank you\", \"thanks\"])) answer = [\"You are welcome\", \"no probelm\", \"I am glad I can help\"][Math.floor(Math.random() * 3)];\n        if (this.checkIncludes(question, [\"sing\", \"song\", \"dance\"])) answer = [\"🎤 Karaoke🎤 \"][Math.floor(Math.random() * 1)];\n        if (this.checkIncludes(question, [\"eat\", \"breakfast\", \"lunch\", \"dinner\", \"meal\", \"food\", \"meat\", \"hungry\"])) answer = this.randomGet([\"🍇 Grapes.\", \"🍈 Melon.\", \"🍉 Watermelon.\", \"🍊 Tangerine.\", \"🍋 Lemon.\", \"🍌 Banana.\", \"🍍 Pineapple.\"]);\n        if (this.checkIncludes(question, [\"what are you doing\", \"are you doing\"])) answer = this.randomGet([\"🙏 Folded Hands\", \"💅 Nail Polish\", \"✍ Writing\", \"👄 Loving you\"]);\n        if (this.checkIncludes(question, [\"wear\"])) answer = this.randomGet([\"👔 Necktie\", \"👕 T-Shirt\", \"👖 Jeans\", \"🧣 Scarf\", \"🧤 Gloves\", \"🧥 Coat\", \"🧦 Socks\", \"👗 Dress\", \"👘 Kimono\", \"👙 Bikini\", \"👚 Woman’s Clothes\", \" 👛 Purse\", \" 👜 Handbag\", \" 👝 Clutch Bag\", \"  🎒 Backpack\", \"  👞 Man’s Shoe\", \"  👟 Running Shoe\", \" 👠 High-Heeled Shoe\", \" 👡 Woman’s Sandal\", \" 👢 Woman’s Boot\"]);\n        if (this.checkIncludes(question, [\"want to\", \"going to\"])) answer = this.randomGet([\"GO! GO! GO!\"]);\n        if (this.checkIncludes(question, [\"you know\"])) answer = this.randomGet([\"I know! Right?\"]);\n        if (this.checkIncludes(question, [\"human\"])) answer = this.randomGet([\"I am robot\"]);\n        if (this.checkIncludes(question, [\"quesbot\"])) answer = this.randomGet([\"What can I do for you?\"]);\n        if (this.checkIncludes(question, [\"jack\"])) answer = this.randomGet([\"who is Jack\", \"are you Jack?\"]);\n        if (this.checkIncludes(question, [\"my name is\", \"i am\", \"i'm\"])) answer = \"Hello, \" + question.split('is ').pop();\n        if (this.checkIncludes(question, [\"manage\", \"add new\"])) answer = this.randomGet([\"Clicking the pie chart icon on the left nav bar will take you to the page\"]);\n\n        if (this.checkIncludes(question, [\"joke\"])) answer = this.randomGet([\"I like turtle\"]);\n        if (this.checkIncludes(question, [\"login\"])) answer = this.randomGet([\"login to your teacher account to use your own feature\"]);\n        if (this.checkIncludes(question, [\"logout\"])) answer = this.randomGet([\"logout byebye\"]);\n        if (this.checkIncludes(question, [\"signup\"])) answer = this.randomGet([\"You can only sign up as a teacher\"]);\n        if (this.checkIncludes(question, [\"brian\"])) answer = this.randomGet([\"I know Brian.\", \"Brian is my dad.\"]);\n        if (REGEX_CHINESE.test(question)) answer = [\"别逗了\", \"哈哈\", \"你说的对\", \"我懂你\", \"你太厉害了\", \"为什么呢\", \"真好\", \"对\"][Math.floor(Math.random() * 8)];\n\n        switch (question) {\n            case \"Who are you?\":\n                answer = \"I am the robot who can answer your questions about this app!\"\n                break;\n            case \"Hello!\":\n                answer = \"Nice to meeting you! May I help you?\"\n                break;\n            case \"What does this application do?\":\n                answer = \"This application helps teachers managing question database and generating test papers.\"\n                break;\n            case \"Can you speak Chinese?\":\n                answer = \"你好，我也可以说中文。\"\n                break;\n            case \"Where can I generate a test paper?\":\n                answer = \"Clicking the printer icon at your left hand side nav bar will take you to the page.\"\n                break;\n            case \"Where can I manage tags?\":\n                answer = \"Clicking the pie chart icon at your left hand side nav bar will take you to the page.\"\n                break;\n            case \"Where can I manage all the questions?\":\n                answer = \"Clicking the database icon (under home) at your left hand side nav bar will take you to the page.\"\n                break;\n            case \"you?\":\n                answer = \"I am good\"\n                break;\n            default:\n                break;\n        }\n\n        return answer;\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Chat user={this.user}\n                    messages={this.state.messages}\n                    onMessageSend={this.addNewMessage}\n                    placeholder={\"Type a message...\"}\n                    width={400}>\n                </Chat>\n            </div>\n        );\n    }\n}\n\nexport default Bot;\n","import React, { Component } from \"react\";\nimport './App.css';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport HomePage from \"./HomePage/components/HomePage.jsx\";\nimport '@progress/kendo-theme-material/dist/all.css';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport MainNav from \"../components/MainNav/MainNav.jsx\";\nimport Account from \"./Account/Account.jsx\";\nimport Database from \"./Database/Database.jsx\";\nimport GeneratePaper from \"./GeneratePaper/GeneratePaper\";\nimport Management from \"./Management/Management.jsx\"\nimport { connect } from 'react-redux';\nimport { doFetchData, doSaveData } from \"./Management/actions\";\nimport Login from \"./Login/Login.jsx\";\nimport Bot from \"./Bot/Bot.jsx\"\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            login: false,\n            bot: false\n        };\n    }\n\n    componentDidMount() {\n        this.props.fetchData();\n    }\n\n    isEmpty = (obj) => {\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key))\n                return false;\n        }\n        return true;\n    }\n    login = () => {\n        this.setState({ login: true })\n    }\n    logout = () => {\n        this.setState({ login: false })\n    }\n    botopen = () => {\n        this.setState({ bot: true })\n    }\n    botclose = () => {\n        this.setState({ bot: false })\n    }\n\n    render() {\n        return (\n            <div>\n                {/* {!this.state.login ? <Login action={this.login} /> : */}\n                <BrowserRouter>\n                    <MainNav action={this.logout} />\n                    {this.isEmpty(this.props.data) ? null :\n                        <div className=\"content\">\n                            <Switch>\n                                <Route path='/home' component={HomePage} />\n                                <Route path='/db-manage' render={() => <Database data={this.props.data} saveData={this.props.saveData} />} />\n                                <Route path='/generate-paper' render={() => <GeneratePaper data={this.props.data} saveData={this.props.saveData} />} />\n                                <Route path='/account' component={Account} />\n                                <Route path='/management' render={() => <Management data={this.props.data} saveData={this.props.saveData} />} />\n                            </Switch>\n                        </div>}\n                    {!this.state.bot ?\n                        <a className=\"bot-btn\" onClick={this.botopen}><i className=\"fas fa-robot\"></i></a>\n                        :\n                        <div>\n                            <Bot />\n                            <a className=\"bot-btn\" onClick={this.botclose}><i className=\"fas fa-times\"></i></a>\n                        </div>\n                    }\n                </BrowserRouter>\n                {/* } */}\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    data: state.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchData: () => dispatch(doFetchData()),\n    saveData: data => dispatch(doSaveData(data))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n\n","import data from \"../../Data/data.json\";\nimport { FETCH_DATA, SAVE_DATA } from \"./actionTypes\";\n\nexport const doFetchData = () => {\n    return {\n        type: FETCH_DATA,\n        payload: data\n    }\n}\nexport const doSaveData = data => {\n    return {\n        type: SAVE_DATA,\n        payload: data\n    }\n}","import { applyMiddleware, createStore } from 'redux';\nimport rootReducer from \"./rootReducer\";\n\n\n// Logger with default options\nimport logger from 'redux-logger'\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(logger)\n)\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport todoApp from './Store/rootReducer'\nimport App from './containers/App.jsx'\nimport Store from \"./Store/Store\";\nimport serviceWorker from \"./serviceWorker\";\n\n\nrender(\n    <Provider store={Store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}